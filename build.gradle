buildscript {
        ext {
                springBootVersion = '2.0.2.RELEASE'
        }
        repositories {
                mavenCentral()
                mavenLocal()
        }
        dependencies {
                classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
                //classpath("net.saliman:gradle-cobertura-plugin:2.5.4")
        }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'net.saliman.cobertura'


group = 'org.maxwell'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
        mavenCentral()
       // mavenLocal()
}

/*configurations.all {
    resolutionStrategy {
        // Cobertura includes an ASM version that can't handle Java 8, ASM 5.0.3 handles Java8
        force 'org.ow2.asm:asm:5.0.3'
        forcedModules = [ 'org.ow2.asm:asm:5.0.3' ]
    }
}*/


dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.projectlombok:lombok')
        compile('org.webjars:bootstrap:3.3.7-1')
        runtime('org.springframework.boot:spring-boot-devtools')
        runtime('com.h2database:h2')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        //testRuntime('org.slf4j:slf4j-log4j12:1.7.5')
		//testRuntime('log4j:log4j:1.2.7')
}

test {
	testLogging {
        // Show that tests are run in the command-line output
        events "PASSED", "FAILED", "SKIPPED"
        exceptionFormat "short"
        // showStandardStreams = true
    }
    outputs.upToDateWhen { false }
}

/*cobertura {
	coverageFormats = ['html', 'xml']				
    coverageIgnoreTrivial = true					
    coverageIgnores = ['org.slf4j.Logger.*']			
    coverageReportDir = new File("$buildDir/reports/cobertura")	
}*/

//test.finalizedBy(project.tasks.cobertura)